{
  "permissions": {
    "allow": [
      "Bash(node:*)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(taskkill:*)",
      "Bash(powershell:*)",
      "Bash(cross-env:*)",
      "Bash(PORT=4000 pnpm dev:backend)",
      "Bash(cat:*)",
      "Bash(PORT=4000 pnpm dev)",
      "Bash(PORT=4000 node -r dotenv/config node_modules/.bin/tsx server/index.ts)",
      "Bash(curl:*)",
      "Bash(pnpm build:*)",
      "Bash(timeout:*)",
      "Bash(npx tsc:*)",
      "Bash(git log:*)",
      "Bash(python -m pip:*)",
      "Bash(python:*)",
      "Bash(mkdir:*)",
      "Bash(pnpm test:*)",
      "Bash(pnpm clean:*)",
      "Bash(git push:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(del refactor-hubs.js)",
      "Bash(move:*)",
      "Bash(cmd /c:*)",
      "Bash(npx tsx:*)",
      "Bash(npx cross-env-shell:*)",
      "Bash(pnpm list:*)",
      "Bash(pnpm add:*)",
      "Bash(pnpm exec playwright:*)",
      "Bash(pnpm test:e2e:*)",
      "Bash(pnpm dev:frontend:*)",
      "Bash(del appsfrontend.env.local)",
      "WebSearch",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:skywork.ai)",
      "Bash(where npx)",
      "Bash(pnpm typecheck:*)",
      "Bash(pnpm --filter @cks/portal build)",
      "Bash(pnpm --filter @cks/ui build)",
      "Bash(pnpm typecheck:frontend:*)",
      "Bash(copy:*)",
      "Bash(pnpm --filter @cks/portal typecheck)",
      "WebFetch(domain:www.reddit.com)",
      "Bash(git reset:*)",
      "Bash(npx vitest run:*)",
      "Bash(pnpm typecheck:backend:*)",
      "Bash(Select-String -Pattern \"backend|error TS\" -Context 0,2)",
      "Bash(Select-Object -First 30)",
      "Bash(pnpm test:ci:*)",
      "Bash(del \"packages\\ui\\src\\cards\\OrderCard\\OrderHeader.tsx\")",
      "Bash(del \"packages\\ui\\src\\cards\\ReportCard\\ReportHeader.tsx\")",
      "Bash(del \"packages\\ui\\src\\cards\\ServiceCard\\ServiceHeader.tsx\")",
      "Bash(pnpm build:domain-widgets:*)",
      "Bash(pnpm --filter @cks/domain-widgets build)",
      "Bash(pnpm --filter frontend build)",
      "Bash(pnpm --filter frontend test:ci)",
      "Bash(Select-String -Pattern \"activity|dismiss\" -Context 0,2)",
      "Bash(pnpm --filter frontend typecheck)",
      "Bash(Select-String -Pattern \"error TS|Build failed\" -Context 0,2)",
      "Bash(Select-Object -First 50)",
      "Bash(Select-String -Pattern \"frontend|error TS\" -Context 0,2)",
      "Bash(pnpm install:*)"
    ],
    "deny": [],
    "ask": []
  }
}