#-----------------------------------------------
#  Property of CKS  Â© 2025
#-----------------------------------------------
# File: Dockerfile.worker
#
# Description:
# Worker container for background job processing
#
# Responsibilities:
# - Build optimized worker process image
# - Handle background jobs and event processing
#
# Role in system:
# - Used to containerize the worker/job processing service
#
# Notes:
# Shares backend code but runs different entry point
#-----------------------------------------------
#  Manifested by Freedom_EXE
#-----------------------------------------------

# Build stage
FROM node:20-alpine AS builder

WORKDIR /app

# Install pnpm
RUN npm install -g pnpm@8

# Copy workspace configuration
COPY pnpm-workspace.yaml package.json pnpm-lock.yaml ./

# Copy package files for dependency resolution
COPY Backend/package.json ./Backend/
COPY Shared/package.json ./Shared/

# Install all dependencies
RUN pnpm install --frozen-lockfile

# Copy source code
COPY Backend/ ./Backend/
COPY Shared/ ./Shared/
COPY Database/ ./Database/

# Build the backend (worker shares backend code)
RUN pnpm run build:backend

# Production stage
FROM node:20-alpine AS production

WORKDIR /app

# Install pnpm
RUN npm install -g pnpm@8

# Copy workspace configuration
COPY pnpm-workspace.yaml package.json pnpm-lock.yaml ./

# Copy package files
COPY Backend/package.json ./Backend/

# Install only production dependencies
RUN pnpm install --prod --frozen-lockfile

# Copy built application
COPY --from=builder /app/Backend/dist ./Backend/dist
COPY --from=builder /app/Shared/dist ./Shared/dist

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S worker -u 1001

# Change ownership and switch to non-root user
RUN chown -R worker:nodejs /app
USER worker

# Health check for worker process
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD pgrep -f "workers/index.js" > /dev/null || exit 1

# Start the worker
CMD ["node", "Backend/dist/core/workers/index.js"]